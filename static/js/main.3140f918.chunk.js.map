{"version":3,"sources":["App.js","index.js"],"names":["App","useState","id","phrase","title","ingredient","descriptions","weightNumber","weightWord","disabled","footerDesc","items","setItems","selected","setSelected","justHovered","setJustHovered","unhover","hover","phrases","numbersToBold","str","split","map","word","isNaN","bold","join","toggleSelect","target","fromText","element","item_id","selected_items","indexOf","classList","add","splice","remove","handleUnhover","currItems","item","footerPhrases","type","onClick","e","document","getElementsByClassName","className","key","onMouseOver","contains","handleHover","currentTarget","onMouseLeave","dangerouslySetInnerHTML","__html","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3140f918.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n  const [items, setItems] = useState([\r\n    {\r\n      id: 'e1qw3',\r\n      phrase: `Сказочное заморское яство`,\r\n      title: 'Нямушка',\r\n      ingredient: 'с фуа-гра',\r\n      descriptions: ['10 порций', 'мышь в подарок'],\r\n      weightNumber: '0,5',\r\n      weightWord: 'кг',\r\n      disabled: false,\r\n      footerDesc: 'Печень утки разварная с артишоками.'\r\n    },\r\n    {\r\n      id: 'a1s23d',\r\n      phrase: `Сказочное заморское яство`,\r\n      title: 'Нямушка',\r\n      ingredient: 'с рыбой',\r\n      descriptions: ['40 порций', '2 мыши в подарок'],\r\n      weightNumber: '2',\r\n      weightWord: 'кг',\r\n      disabled: false,\r\n      footerDesc: 'Головы щучьи с чесноком да свежайшая сёмгушка.'\r\n    },\r\n    {\r\n      id: 'zx5c4',\r\n      phrase: `Сказочное заморское яство`,\r\n      title: 'Нямушка',\r\n      ingredient: 'с курой',\r\n      descriptions: ['100 порций', '5 мышей в подарок', 'заказчик доволен'],\r\n      weightNumber: '5',\r\n      weightWord: 'кг',\r\n      disabled: true,\r\n      footerDesc: 'Филе из цыплят с трюфелями в бульоне.'\r\n    }\r\n  ])\r\n\r\n  const [selected, setSelected] = useState([])\r\n  const [justHovered, setJustHovered] = useState(false) \r\n  const [phrases] = useState({\r\n    unhover: 'Сказочное заморское яство',\r\n    hover: 'Котэ не одобряет?',\r\n  })\r\n\r\n  const numbersToBold = (str) => {\r\n    return (str.split(' ')\r\n      .map(word => { return isNaN(word) ? word : word.bold() })\r\n      .join(' '))\r\n  }\r\n\r\n  const toggleSelect = (target, id, fromText) => {\r\n    const element = target\r\n    const item_id = id\r\n    const selected_items = selected\r\n    const index = selected_items.indexOf(item_id)\r\n\r\n    if (index === -1) {\r\n      setSelected([item_id, ...selected])\r\n      element.classList.add('selected')\r\n      if (!fromText) setJustHovered(true)\r\n    } else {\r\n      selected_items.splice(selected_items.indexOf(item_id), 1)\r\n      setSelected(selected_items)\r\n      element.classList.remove('selected')\r\n      handleUnhover(target, item_id)\r\n    }\r\n  }\r\n\r\n  const handleHover = (target, id) => {\r\n    const currItems = items.map(item => {\r\n      if (item.id === id && target.classList.contains('selected') && !justHovered) {\r\n        item.phrase = phrases.hover\r\n        target.classList.add('on-selected-hover')\r\n      }\r\n      return item\r\n    })\r\n    setItems(currItems)\r\n  }\r\n\r\n  const handleUnhover = (target, id) => {\r\n    const currItems = items.map(item => {\r\n      if (item.id === id) {\r\n        item.phrase = phrases.unhover\r\n        target.classList.remove('on-selected-hover')\r\n      }\r\n      return item\r\n    })\r\n    setJustHovered(false)\r\n    setItems(currItems)\r\n  }\r\n\r\n  const footerPhrases = (type, item) => {\r\n    switch (type) {\r\n      case 'default':\r\n        return (\r\n          <>\r\n            Чего сидишь? Порадуй котэ <span\r\n              onClick={e => toggleSelect(document.getElementsByClassName(item.id)[0], item.id, true)}\r\n              className=\"buy-text\">купи.\r\n              </span>\r\n          </>)\r\n      case 'disabled':\r\n        return (<span className='disabled-footer-text'>Печалька, {item.ingredient} закончился</span>)\r\n      case 'selected':\r\n        return (item.footerDesc)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"background\">\r\n      <div className=\"background-shadow\">\r\n        <div className=\"page-content\">\r\n          <div className=\"page-title\">\r\n            Ты сегодня покормил кота?\r\n        </div>\r\n          <div className=\"container\">\r\n            {items.map(item => {\r\n              return (\r\n                <div className=\"item\" key={item.id}>\r\n                  <div className={`card ${item.id} ${item.disabled ? 'disabled' : ''}`}\r\n                    onMouseOver={(e) => item.disabled ? null : handleHover(e.currentTarget, item.id)}\r\n                    onMouseLeave={(e) => item.disabled ? null : handleUnhover(e.currentTarget, item.id)}\r\n                    onClick={(e) => item.disabled ? null : toggleSelect(e.currentTarget, item.id)}\r\n                    key={item.id}>\r\n                    <div className=\"main-text\">\r\n                      <div className=\"phrase\">\r\n                        {item.phrase}\r\n                      </div>\r\n                      <div className=\"title\">\r\n                        {item.title}\r\n                      </div>\r\n                      <div className=\"ingredient\">\r\n                        {item.ingredient}\r\n                      </div>\r\n                      <div className=\"description\">\r\n                        {item.descriptions.map(str =>\r\n                          <div key={str} dangerouslySetInnerHTML={{ __html: numbersToBold(str) }}>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"weight\">\r\n                      <span className=\"number\">{item.weightNumber}</span>\r\n                      <br />\r\n                      <span className=\"word\">{item.weightWord}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"footer-text\">\r\n                    {item.disabled ? footerPhrases('disabled', item) :\r\n                      selected.indexOf(item.id) !== -1 ?\r\n                        footerPhrases('selected', item) : footerPhrases('default', item)\r\n                    }\r\n\r\n                  </div>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}